plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'maven-publish'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 22
        versionName "1.0.23"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true

    }

    flavorDimensions "server"

    productFlavors {
        dev {
            dimension "server"
            versionNameSuffix "-Dev"
        }
        qa {
            dimension "server"
            versionNameSuffix "-QA"
        }
        stage {
            dimension "server"
            versionNameSuffix "-Stage"
        }
        live {
            dimension "server"
        }
    }

}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'

    // Preference
    implementation "androidx.preference:preference-ktx:$version_perference"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    //Gson
    implementation "com.google.code.gson:gson:$version_gson"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    api "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    //moshi
    api "com.squareup.moshi:moshi:$version_moshi"
    api "com.squareup.moshi:moshi-kotlin:$version_moshi"

    //OK HTTP
    implementation "com.squareup.okhttp3:logging-interceptor:$version_ok_http"
    implementation "com.squareup.okhttp3:okhttp:$version_ok_http"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //CHUCK
    debugImplementation "com.github.chuckerteam.chucker:library:$versions_chucker"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$versions_chucker"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Hilt
    api "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "com.android.support:multidex:1.0.3"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt "androidx.hilt:hilt-compiler:1.0.0"

}

//maven local publish script (we only need this for local publish, to test the library)

afterEvaluate {
    android.libraryVariants.each { varient ->
        publishing.publications.create(varient.name,MavenPublication){
            from components.findByName(varient.name)
            groupId="com.github.mediqshc"
            artifactId="netwrok_module"
            version="1.0.0"
        }
    }
}

